{"version":3,"sources":["recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","img","alt","App","useState","recipes","setrecipes","search","setsearch","query","setquery","useEffect","getRecipes","console","log","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uQAkBeA,EAfA,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACrC,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,6CAAgBR,KAChB,qBAAKS,IAAKR,EAAOE,UAAWC,IAAMM,IAAKC,IAAI,S,MCgDxCC,MAzDf,WAEE,IAFa,EAKiBC,mBAAS,IAL1B,mBAKNC,EALM,KAKGC,EALH,OAMeF,mBAAS,IANxB,mBAMNG,EANM,KAMEC,EANF,OAOaJ,mBAAS,WAPtB,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAU,WACRC,IACAC,QAAQC,IAAI,0BACX,CAACL,IAEJ,IAAMG,EAAU,uCAAG,8BAAAG,EAAA,sEACMC,MAAM,mCAAD,OACSP,EADT,mBAbf,WAae,oBAZd,qCAWG,cACXQ,EADW,gBAGEA,EAASC,OAHX,OAGXC,EAHW,OAIjBb,EAAWa,EAAKC,MAChBP,QAAQC,IAAIK,EAAKC,MALA,2CAAH,qDAkBhB,OACE,sBAAK1B,UAAU,MAAf,UACE,oBAAIA,UAAU,OAAd,qBACA,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,SAAa,mBAAGA,UAAU,WAAb,oCAAkD,qBAAKA,UAAU,YAE/F,uBAAMA,UAAU,cAAc2B,SAZhB,SAAAC,GAChBA,EAAEC,iBACFb,EAASH,GACTC,EAAU,KASR,UACE,uBAAOgB,KAAK,SAASC,YAAY,iBAAiB/B,UAAU,aAAagC,MAAOnB,EAAQoB,SAjBzE,SAAAL,GACnBd,EAAUc,EAAEM,OAAOF,UAiBf,wBAAQhC,UAAU,aAAa8B,KAAK,SAApC,uBAEF,qBAAK9B,UAAU,WAAf,SACGW,EAAQR,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAEEN,MAAOM,EAAOA,OAAOiC,MACrBtC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAaG,EAAOA,OAAOH,aAJtBG,EAAOA,OAAOiC,gBCrChBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,IAAM,uB","file":"static/js/main.801257b3.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\n\r\nconst Recipe = ({title, calories, image, ingredients}) => {\r\n    return(\r\n        <div className={style.recipe}>\r\n            <h1>{title}</h1>\r\n            <ol>\r\n                {ingredients.map(ingredient =>(\r\n                    <li>{ingredient.text}</li>\r\n                ))}\r\n            </ol>\r\n            <h5>Calories : {calories}</h5>\r\n            <img src={image} className={style.img} alt=\"\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Recipe;","import React, { useEffect, useState } from 'react';\nimport Recipe from './recipe';\nimport './App.css';\n\nfunction App() {\n\n  const APP_ID = \"c67b7d9e\";\n  const APP_KEY = \"edf677d86d4c5e6187a5e90a91b20475\"\n\n  const [recipes, setrecipes] = useState([]);\n  const [search, setsearch] = useState('');\n  const [query, setquery] = useState('chicken');\n\n  useEffect(() => {\n    getRecipes();\n    console.log(\"We are Fetching Data\");\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setrecipes(data.hits);\n    console.log(data.hits);\n  }\n\n  const updatesearch = e => {\n    setsearch(e.target.value);\n  }\n\n  const getsearch = e => {\n    e.preventDefault();\n    setquery(search);\n    setsearch('');\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"logo\">Frecipe</h1>\n      <div className=\"logobottom\">\n        <div className=\"line\"></div><p className=\"logo-des\">Get Delicious Recipies</p><div className=\"line\"></div>\n      </div>\n      <form className=\"search-form\" onSubmit={getsearch} >\n        <input type=\"search\" placeholder=\"Search Recipes\" className=\"search-bar\" value={search} onChange={updatesearch} />\n        <button className=\"search-btn\" type=\"submit\">Search</button>\n      </form>\n      <div className=\"recipies\">\n        {recipes.map(recipe => (\n          <Recipe\n            key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients={recipe.recipe.ingredients}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__3kb72\",\"img\":\"recipe_img__2swQC\"};"],"sourceRoot":""}